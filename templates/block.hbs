<div class="main">
  <div class="header">
    Input
    <span class="header-info">
      <span>length: {{inputLength}}</span>
      <span>lines: {{inputLines}}</span>
    </span>
  </div>
  <div class="results">
    {{{entityValue}}}
  </div>


  <div class="header">
    Recipe
    <span class="header-buttons">
      {{!-- Will implement saving and loading in a future version --}}
      {{!-- <button type="button" title="Save Recipe" class="header-button" {{action "saveRecipe"}}>
        {{fa-icon "save" fixedWidth=true  size="lg" class="header-button-icon"}}
      </button>
      <button type="button" title="Load Recipe" class="header-button" {{action "loadRecipe"}}>
        {{fa-icon "folder" fixedWidth=true  size="lg" class="header-button-icon"}}
      </button> --}}
      <button type="button" title="Bring your Input and Recipe to Browser" class="header-button">
        <a href={{fullRecipeLink}}>{{fa-icon "external-link-alt" fixedWidth=true  size="lg" class="header-button-icon"}}</a>
      </button>
      <button type="button" title="Clear Recipe" class="header-button" {{action "clearRecipe"}}>
        {{fa-icon "trash" fixedWidth=true  size="lg" class="header-button-icon"}}
      </button>
    </span>
  </div>
  {{#if operations.length}}
    {{#each operations as |operation operationIndex|}}
      <div class="operation {{if operation.__disabled "disabled" ""}} {{if operation.outputError "error" ""}}">
        <div class={{if (and operation.__expanded operation.args.length) "operation-header expanded" "operation-header"}}>
          <div class="operation-box-controls">
            <div class="order-moving-buttons">
              {{#if (and (not (eq operationIndex 0)) (gt operations.length 1))}}
                <button 
                  type="button"
                  class={{if (and (not (eq operationIndex operationLengthMinusOne)) (gt operations.length 1)) "no-style-button operation-moving-button top-arrow" "no-style-button operation-moving-button"}}
                  {{action "moveOperationUp" operationIndex}}
                >
                  {{fa-icon "arrow-alt-up" fixedWidth=true  size="xs" class="operation-moving-button-icon"}}
                </button>
              {{else}}
                <button 
                  type="button"
                  class="hide no-style-button"
                >
                  {{fa-icon "arrow-alt-up" fixedWidth=true  size="xs" class="operation-moving-button-icon"}}
                </button>
              {{/if}}
              {{#if (and (not (eq operationIndex operationLengthMinusOne)) (gt operations.length 1))}}
                <button
                  type="button"
                  class="no-style-button operation-moving-button"
                  {{action "moveOperationDown" operationIndex}}
                >
                  {{fa-icon "arrow-alt-down" fixedWidth=true  size="xs" class="operation-moving-button-icon"}}
                </button>
              {{else}}
                <button 
                  type="button"
                  class="hide no-style-button"
                >
                  {{fa-icon "arrow-alt-down" fixedWidth=true  size="xs" class="operation-moving-button-icon"}}
                </button>
              {{/if}}
            </div>
            <div class="operation-name" title={{{operation.description}}} {{action "toggleOperationView" operationIndex}}>
              {{operation.name}}
            </div>
            <div class="expand-collapse-icons">
              {{#if operation.__expanded}}
                <button 
                  type="button" 
                  class="no-style-button expand-collapse-button" 
                  {{action "toggleOperationView" operationIndex}}
                >
                  {{fa-icon "chevron-up" fixedWidth=true  size="xs" class="expand-collapse-icon"}}
                </button>
              {{else}}
                <button
                  type="button"
                  class="no-style-button expand-collapse-button"
                  {{action "toggleOperationView" operationIndex}}
                >
                  {{fa-icon "chevron-down" fixedWidth=true  size="xs" class="expand-collapse-icon"}}
                </button>
              {{/if}}
            </div>
          </div>
          <span class="operation-buttons">
            <button type="button" class="no-style-button operation-button disable-button" {{action "disableOperation" operationIndex}}>
              {{fa-icon "ban" fixedWidth=true  size="md" class="operation-button-icon disable-button-icon"}}
            </button>
            <button type="button" class="no-style-button operation-button">
              <a href={{operation.recipeLink}}>
                {{fa-icon "external-link-alt" fixedWidth=true  size="md" class="operation-button-icon"}}
              </a>
            </button>
            <button type="button" class="no-style-button operation-button" {{action "deleteOperation" operationIndex}}>
              {{fa-icon "trash-alt" fixedWidth=true  size="md" class="operation-button-icon"}}
            </button>
          </span>
        </div>

        {{#if operation.__expanded}}
          {{#if operation.args.length}}
            <div class="operation-argument-groups">
              {{#each operation.args as |operationArgumentGroup groupIndex|}}
                <div class="operation-argument-group">
                  {{#each operationArgumentGroup as |operationArgument argumentIndex|}}
                    {{#if (not operationArgument.hide)}}
                      <div class={{if operationArgument.fullWidth "operation-argument full-line" "operation-argument"}}>
                        {{#if (eq operationArgument.type "boolean")}}
                          <div class="groupable-argument">
                            <label>
                              {{input
                                type="checkbox"
                                checked=operationArgument.selectedValue
                                disabled=operation.__disabled
                              }}
                              <span class="checkbox-label">{{operationArgument.name}}</span>
                            </label>
                          </div>
                        {{/if}}
                        {{#if (eq operationArgument.type "number")}}
                          <div class="groupable-argument stacked-label-argument">
                            <span>{{operationArgument.name}}</span>
                            {{input
                              type="number"
                              class="input-field"
                              enter=(action "runBake" value="target.value")
                              focus-out=(action "runBake" value="target.value")
                              value=operationArgument.selectedValue
                              min=operationArgument.min
                              max=operationArgument.max
                              disabled=operation.__disabled
                            }}
                          </div>
                        {{/if}}
                        {{#if (or (eq operationArgument.type "shortString") (eq operationArgument.type "binaryShortString"))}}
                          <div class="groupable-argument stacked-label-argument">
                            <span>{{operationArgument.name}}</span>
                            {{input
                              type="text"
                              class="input-field"
                              enter=(action "runBake" value="target.value")
                              focus-out=(action "runBake" value="target.value")
                              value=operationArgument.selectedValue
                              disabled=operation.__disabled
                            }}
                          </div>
                        {{/if}}
                        {{#if (eq operationArgument.type "option")}}
                          <div class="groupable-argument stacked-label-argument">
                            <span>{{operationArgument.name}}</span>

                            <select 
                              class="w-100 dropdown" 
                              onchange={{action (mut operationArgument.selectedValue) value="target.value"}}
                              disabled={{operation.__disabled}}
                            >
                              {{#each operationArgument.value as |argumentOption|}}
                                <option class="dropdown-option" selected={{eq argumentOption operationArgument.selectedValue}} value={{argumentOption}}>
                                  {{argumentOption}}
                                </option>
                              {{/each}}
                            </select>
                          </div>
                        {{/if}}
                        {{#if (eq operationArgument.type "editableOptionShort")}}
                          <div class="groupable-argument stacked-label-argument">
                            <span>{{operationArgument.name}}</span>
                            <div class="input-field toggle-string">
                              {{input
                                type="text"
                                class="input-field"
                                enter=(action "runBake" value="target.value")
                                focus-out=(action "runBake" value="target.value")
                                value=operationArgument.selectedValue
                                disabled=operation.__disabled
                              }}
                              <select 
                                class="dropdown editable-option" 
                                onchange={{action "editOptionInputValue" operationIndex groupIndex argumentIndex}}
                                disabled={{operation.__disabled}}
                              >
                                <option selected disabled>_{{operationArgument.name}}_</option>
                                {{#each operationArgument.value as |argumentOption optionIndex|}}
                                  <option class="dropdown-option" value={{optionIndex}}>
                                    {{argumentOption.name}}
                                  </option>
                                {{/each}}
                              </select>
                            </div>
                          </div>
                        {{/if}}
                        {{!-- TODO: Is used for 'Bombe', 'Colossus', 'Enigma', 'Lorenz' operations. Will not Implement for now. --}}
                        {{!-- {{#if (eq operationArgument.type "argSelector")}}
                          <div class="groupable-argument stacked-label-argument">
                            <span>{{operationArgument.name}}</span>

                            <select 
                              class="w-100 dropdown" 
                              onchange={{action "changeArgSelector" operationIndex groupIndex argumentIndex}}
                              disabled={{operation.__disabled}}
                            >
                              {{#each operationArgument.value as |argumentOption optionIndex|}}
                                <option class="dropdown-option" selected={{eq argumentOption operationArgument.selectedValue}} value={{optionIndex}}>
                                  {{argumentOption.name}}
                                </option>
                              {{/each}}
                            </select>
                          </div>
                        {{/if}} --}}

                        {{!-- Full Width Arguments --}}
                        {{#if (eq operationArgument.type "label")}}
                          <div class="full-width label-type">
                            <label>{{operationArgument.name}}</label>
                          </div>
                        {{/if}}
                        {{#if (or (eq operationArgument.type "string") (eq operationArgument.type "binaryString"))}}
                          <div class="full-width stacked-label-argument">
                            <span>{{operationArgument.name}}</span>
                            {{input
                              type="text"
                              class="input-field"
                              enter=(action "runBake" value="target.value")
                              focus-out=(action "runBake" value="target.value")
                              value=operationArgument.selectedValue
                              disabled=operation.__disabled
                            }}
                          </div>
                        {{/if}}
                        {{#if (eq operationArgument.type "text")}}
                          <div class="full-width stacked-label-argument">
                            <span>{{operationArgument.name}}</span>
                            {{textarea
                              class="input-field"
                              focus-out=(action "runBake" value="target.value")
                              rows=3
                              value=operationArgument.selectedValue
                              disabled=operation.__disabled
                            }}
                          </div>
                        {{/if}}
                        {{#if (eq operationArgument.type "toggleString")}}
                          <div class="full-width stacked-label-argument">
                            <span>{{operationArgument.name}}</span>
                            <div class="input-field toggle-string">
                              {{input
                                type="text"
                                class="input-field"
                                enter=(action "runBake" value="target.value")
                                focus-out=(action "runBake" value="target.value")
                                value=operationArgument.selectedValue.string
                                disabled=operation.__disabled
                              }}

                              <select 
                                class="dropdown" 
                                onchange={{action (mut operationArgument.selectedValue.option) value="target.value"}}
                                disabled={{operation.__disabled}}
                              >
                                {{#each operationArgument.toggleValues as |argumentOption|}}
                                  <option class="dropdown-option" selected={{eq argumentOption operationArgument.selectedValue.option}} value={{argumentOption}}>
                                    {{argumentOption}}
                                  </option>
                                {{/each}}
                              </select>
                            </div>
                          </div>
                        {{/if}}
                        {{#if (eq operationArgument.type "editableOption")}}
                          <div class="full-width stacked-label-argument">
                            <span>{{operationArgument.name}}</span>
                            <div class="input-field toggle-string">
                              {{input
                                type="text"
                                class="input-field"
                                enter=(action "runBake" value="target.value")
                                focus-out=(action "runBake" value="target.value")
                                value=operationArgument.selectedValue
                                disabled=operation.__disabled
                              }}
                              <select 
                                class="dropdown editable-option" 
                                onchange={{action "editOptionInputValue" operationIndex groupIndex argumentIndex}}
                                disabled={{operation.__disabled}}
                              >
                                <option selected disabled>_{{operationArgument.name}}_</option>
                                {{#each operationArgument.value as |argumentOption optionIndex|}}
                                  <option class="dropdown-option" value={{optionIndex}}>
                                    {{argumentOption.name}}
                                  </option>
                                {{/each}}
                              </select>
                            </div>
                          </div>
                        {{/if}}

                        {{!-- TODO: Is used for 'Parse DateTime', 'Regular expression', 'Translate DateTime Format' operations. Will not Implement for now. --}}
                        {{!-- {{#if (eq operationArgument.type "populateOption")}}
                          <div class="full-width">

                          </div>
                        {{/if}} --}}

                        {{!-- TODO: Is used for 'Multiple Bombe' operation. Will not Implement for now. --}}
                        {{!-- {{#if (eq operationArgument.type "populateMultiOption")}}
                          <div class="full-width">

                          </div>
                        {{/if}} --}}
                      </div>
                    {{/if}}
                  {{/each}}
                </div>
              {{/each}}
            </div>
            
          {{/if}}

          <div class="results output">
            <span class={{if (eq operationIndex operationLengthMinusOne) "output-title last" "output-title"}}>
              {{#if (eq operationIndex operationLengthMinusOne)}}
                Output:
              {{else}}
                Step Result:
              {{/if}}
              <div class="output-info">
                <span>length: {{operation.outputLength}}</span>
                <span>lines: {{operation.outputLines}}</span>
              </div>
            </span>
            {{#if operation.__disabled}}
              <span class="no-results"><em>Disabled.  No Result for this Step.</em></span>
            {{else}}  
              {{#if operation.outputLength}}
                {{{operation.displayResult}}}
              {{else}}
                <span class="no-results"><em>None</em></span>
              {{/if}}
            {{/if}}
          </div>
        {{/if}}
      </div>
    {{/each}}
  {{else}}
    <div class="results no-operations">
      {{fa-icon "bread-slice" fixedWidth=true  size="md" class="no-ingredients-icon"}} 
      {{fa-icon "cheese" fixedWidth=true  size="md" class="no-ingredients-icon"}} 
      Your Recipe lacks Steps/Ingredients 
      {{fa-icon "pepper-hot" fixedWidth=true  size="md" class="no-ingredients-icon"}} 
      {{fa-icon "carrot" fixedWidth=true  size="md" class="no-ingredients-icon"}}
    </div>
  {{/if}}

  <div class="header">
    Operations
    <span class="header-buttons">
      <button type="button" title="Magic" class="header-button" {{action "toggleMagicModal"}}>
        {{fa-icon "magic" fixedWidth=true  size="lg" class="header-button-icon"}}
      </button>
    </span>
  </div>
  <div class="add-operation">
    <div class="select-area">
      {{#power-select
        class="operation-select"
        triggerClass="form-control"
        options=foundOperations
        selected=selectedOperation
        searchEnabled=true
        searchField="name"
        placeholder="Search..."
        search=(action "searchOperations")
        searchMessage="Searching Operations..."
        loadingMessage="Loading..."
        searchPlaceholder="Search..."
        closeOnSelect=true
        onOpen=(action "searchOperations" " ")
        onChange=(action (mut selectedOperation)) as |operation|}}
        <span class="operation-select-name" title={{{operation.description}}}>{{operation.name}}</span>
      {{/power-select}}
    </div>
    {{#if searchErrorMessage}}
      <div class="alert alert-danger mt-1">
        {{searchErrorMessage}}
      </div>
    {{/if}}
    <div class="add-step">
      <button type="button" title="Add Operation/Ingredient and Bake" class="add-step-button" {{action "addStep"}}>
        <img src="https://gchq.github.io/CyberChef/images/cook_male-32x32.png" alt="Chef" class="chef-icon" />
        Add Step & BAKE!
      </button>
    </div>
  </div>
  {{#if magicModalOpen}}
    <div class="magic-modal">
      <div class="operation">
        <div class="operation-header">
          <div class="operation-box-controls">
            <div 
              class="operation-name" 
              title="The Magic operation attempts to detect various properties of the input data and suggests which operations could help to make more sense of it. ***Options*** __Depth__: If an operation appears to match the data, it will be run and the result will be analysed further. This argument controls the maximum number of levels of recursion. __Intensive mode__: When this is turned on, various operations like XOR, bit rotates, and character encodings are brute-forced to attempt to detect valid data underneath. To improve performance, only the first 100 bytes of the data is brute-forced. __Extensive language support__: At each stage, the relative byte frequencies of the data will be compared to average frequencies for a number of languages. The default set consists of ~40 of the most commonly used languages on the Internet. The extensive list consists of 284 languages and can result in many languages matching the data if their byte frequencies are similar. Optionally enter a regular expression to match a string you expect to find to filter results (crib)." 
            >
              Magic
            </div>
          </div>
          <span class="operation-buttons">
            <button type="button" class="no-style-button operation-button" {{action "toggleMagicModal"}}>
              {{fa-icon "window-close" fixedWidth=true  size="md" class="operation-button-icon"}}
            </button>
          </span>
        </div>

        <div class="operation-argument-groups">
          <div class="operation-argument-group">
            <div class="operation-argument">
              <div class="groupable-argument stacked-label-argument">
                <span>Depth</span>
                {{input
                  type="number"
                  class="input-field"
                  input=(action 'updateMagicInput')
                  change=(action 'updateMagicInput')
                  value=magicDepth
                }}
              </div>
            </div>
            <div class="operation-argument">
              <div class="groupable-argument intensive-input">
                <label>
                  {{input
                    type="checkbox"
                    click=(action "updateMagicInput" "magicIntensiveMode")
                    checked=magicIntensiveMode
                  }}
                  <span class="checkbox-label">Intensive mode</span>
                </label>
              </div>
            </div>
            <div class="operation-argument">
              <div class="groupable-argument language-input">
                <label>
                  {{input
                    type="checkbox"
                    click=(action "updateMagicInput" "magicExtensiveLanguageSupport")
                    checked=magicExtensiveLanguageSupport
                  }}
                  <span class="checkbox-label">Extensive language support</span>
                </label>
              </div>
            </div>
          </div>
          <div class="operation-argument-group">
            <div class="operation-argument full-line">
              <div class="full-width stacked-label-argument">
                <span>Crib (known plaintext string or regex)</span>
                {{input
                  type="text"
                  class="input-field"
                  input=(action "updateMagicInput" )
                  value=magicCrib
                }}
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="magic-suggestions">
        <div class="magic-suggestions-header">Suggestions</div>
        <select class="magic-suggestions-selector" size=4 onchange={{action "addMagicSuggestion" value="target.value"}}>
          {{#if magicSuggestions.length}}
            {{#each magicSuggestions as |suggestion suggestionIndex|}}
              <option value="{{suggestionIndex}}" title={{suggestion.description}}>{{suggestion.name}}</option>
            {{/each}}
          {{else}}
            <option selected disabled>No Magic Suggestions Found</option>
          {{/if}}
        </select>
      </div>
    </div>
  {{/if}}
</div>
